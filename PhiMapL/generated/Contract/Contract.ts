// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangeBasePlate extends ethereum.Event {
  get params(): ChangeBasePlate__Params {
    return new ChangeBasePlate__Params(this);
  }
}

export class ChangeBasePlate__Params {
  _event: ChangeBasePlate;

  constructor(event: ChangeBasePlate) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ChangePhilandOwner extends ethereum.Event {
  get params(): ChangePhilandOwner__Params {
    return new ChangePhilandOwner__Params(this);
  }
}

export class ChangePhilandOwner__Params {
  _event: ChangePhilandOwner;

  constructor(event: ChangePhilandOwner) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ChangeWallPaper extends ethereum.Event {
  get params(): ChangeWallPaper__Params {
    return new ChangeWallPaper__Params(this);
  }
}

export class ChangeWallPaper__Params {
  _event: ChangeWallPaper;

  constructor(event: ChangeWallPaper) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CreatedMap extends ethereum.Event {
  get params(): CreatedMap__Params {
    return new CreatedMap__Params(this);
  }
}

export class CreatedMap__Params {
  _event: CreatedMap;

  constructor(event: CreatedMap) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get numberOfLand(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DepositSuccess extends ethereum.Event {
  get params(): DepositSuccess__Params {
    return new DepositSuccess__Params(this);
  }
}

export class DepositSuccess__Params {
  _event: DepositSuccess;

  constructor(event: DepositSuccess) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MapInitialization extends ethereum.Event {
  get params(): MapInitialization__Params {
    return new MapInitialization__Params(this);
  }
}

export class MapInitialization__Params {
  _event: MapInitialization;

  constructor(event: MapInitialization) {
    this._event = event;
  }

  get iname(): string {
    return this._event.parameters[0].value.toString();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MapLockStatusChange extends ethereum.Event {
  get params(): MapLockStatusChange__Params {
    return new MapLockStatusChange__Params(this);
  }
}

export class MapLockStatusChange__Params {
  _event: MapLockStatusChange;

  constructor(event: MapLockStatusChange) {
    this._event = event;
  }
}

export class RemoveLink extends ethereum.Event {
  get params(): RemoveLink__Params {
    return new RemoveLink__Params(this);
  }
}

export class RemoveLink__Params {
  _event: RemoveLink;

  constructor(event: RemoveLink) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemoveObject extends ethereum.Event {
  get params(): RemoveObject__Params {
    return new RemoveObject__Params(this);
  }
}

export class RemoveObject__Params {
  _event: RemoveObject;

  constructor(event: RemoveObject) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Save extends ethereum.Event {
  get params(): Save__Params {
    return new Save__Params(this);
  }
}

export class Save__Params {
  _event: Save;

  constructor(event: Save) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WhitelistGranted extends ethereum.Event {
  get params(): WhitelistGranted__Params {
    return new WhitelistGranted__Params(this);
  }
}

export class WhitelistGranted__Params {
  _event: WhitelistGranted;

  constructor(event: WhitelistGranted) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WhitelistRemoved extends ethereum.Event {
  get params(): WhitelistRemoved__Params {
    return new WhitelistRemoved__Params(this);
  }
}

export class WhitelistRemoved__Params {
  _event: WhitelistRemoved;

  constructor(event: WhitelistRemoved) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WithdrawSuccess extends ethereum.Event {
  get params(): WithdrawSuccess__Params {
    return new WithdrawSuccess__Params(this);
  }
}

export class WithdrawSuccess__Params {
  _event: WithdrawSuccess;

  constructor(event: WithdrawSuccess) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class WriteLink extends ethereum.Event {
  get params(): WriteLink__Params {
    return new WriteLink__Params(this);
  }
}

export class WriteLink__Params {
  _event: WriteLink;

  constructor(event: WriteLink) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[3].value.toString();
  }

  get url(): string {
    return this._event.parameters[4].value.toString();
  }

  get data(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class WriteObject extends ethereum.Event {
  get params(): WriteObject__Params {
    return new WriteObject__Params(this);
  }
}

export class WriteObject__Params {
  _event: WriteObject;

  constructor(event: WriteObject) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get xStart(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get yStart(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Contract__basePlateResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Contract__checkAllDepositStatusResultValue0Struct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get used(): BigInt {
    return this[3].toBigInt();
  }
}

export class Contract__checkBasePlateResultValue0Struct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__checkDepositStatusResultValue0Struct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get used(): BigInt {
    return this[3].toBigInt();
  }
}

export class Contract__checkWallPaperResultValue0Struct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__depositInfoResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Contract__mapSettingsResult {
  value0: i32;
  value1: i32;
  value2: i32;
  value3: i32;

  constructor(value0: i32, value1: i32, value2: i32, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }
}

export class Contract__userObjectResultLinkStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }

  get data(): BigInt {
    return this[2].toBigInt();
  }
}

export class Contract__userObjectResult {
  value0: Address;
  value1: BigInt;
  value2: i32;
  value3: i32;
  value4: i32;
  value5: i32;
  value6: Contract__userObjectResultLinkStruct;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: i32,
    value3: i32,
    value4: i32,
    value5: i32,
    value6: Contract__userObjectResultLinkStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    return map;
  }
}

export class Contract__userObjectDepositResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Contract__viewLinksResultValue0Struct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }

  get data(): BigInt {
    return this[2].toBigInt();
  }
}

export class Contract__viewObjectLinkResultValue0Struct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }

  get data(): BigInt {
    return this[2].toBigInt();
  }
}

export class Contract__viewPhilandResultValue0Struct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get xStart(): i32 {
    return this[2].toI32();
  }

  get yStart(): i32 {
    return this[3].toI32();
  }

  get xEnd(): i32 {
    return this[4].toI32();
  }

  get yEnd(): i32 {
    return this[5].toI32();
  }

  get link(): Contract__viewPhilandResultValue0LinkStruct {
    return changetype<Contract__viewPhilandResultValue0LinkStruct>(
      this[6].toTuple()
    );
  }
}

export class Contract__viewPhilandResultValue0LinkStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }

  get data(): BigInt {
    return this[2].toBigInt();
  }
}

export class Contract__wallPaperResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  basePlate(param0: string): Contract__basePlateResult {
    let result = super.call(
      "basePlate",
      "basePlate(string):(address,uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return new Contract__basePlateResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_basePlate(
    param0: string
  ): ethereum.CallResult<Contract__basePlateResult> {
    let result = super.tryCall(
      "basePlate",
      "basePlate(string):(address,uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__basePlateResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  checkAllDepositStatus(
    name: string
  ): Array<Contract__checkAllDepositStatusResultValue0Struct> {
    let result = super.call(
      "checkAllDepositStatus",
      "checkAllDepositStatus(string):((address,uint256,uint256,uint256)[])",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toTupleArray<
      Contract__checkAllDepositStatusResultValue0Struct
    >();
  }

  try_checkAllDepositStatus(
    name: string
  ): ethereum.CallResult<
    Array<Contract__checkAllDepositStatusResultValue0Struct>
  > {
    let result = super.tryCall(
      "checkAllDepositStatus",
      "checkAllDepositStatus(string):((address,uint256,uint256,uint256)[])",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__checkAllDepositStatusResultValue0Struct>()
    );
  }

  checkBasePlate(name: string): Contract__checkBasePlateResultValue0Struct {
    let result = super.call(
      "checkBasePlate",
      "checkBasePlate(string):((address,uint256))",
      [ethereum.Value.fromString(name)]
    );

    return changetype<Contract__checkBasePlateResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_checkBasePlate(
    name: string
  ): ethereum.CallResult<Contract__checkBasePlateResultValue0Struct> {
    let result = super.tryCall(
      "checkBasePlate",
      "checkBasePlate(string):((address,uint256))",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contract__checkBasePlateResultValue0Struct>(value[0].toTuple())
    );
  }

  checkDepositStatus(
    name: string,
    contractAddress: Address,
    tokenId: BigInt
  ): Contract__checkDepositStatusResultValue0Struct {
    let result = super.call(
      "checkDepositStatus",
      "checkDepositStatus(string,address,uint256):((address,uint256,uint256,uint256))",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );

    return changetype<Contract__checkDepositStatusResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_checkDepositStatus(
    name: string,
    contractAddress: Address,
    tokenId: BigInt
  ): ethereum.CallResult<Contract__checkDepositStatusResultValue0Struct> {
    let result = super.tryCall(
      "checkDepositStatus",
      "checkDepositStatus(string,address,uint256):((address,uint256,uint256,uint256))",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromAddress(contractAddress),
        ethereum.Value.fromUnsignedBigInt(tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contract__checkDepositStatusResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  checkWallPaper(name: string): Contract__checkWallPaperResultValue0Struct {
    let result = super.call(
      "checkWallPaper",
      "checkWallPaper(string):((address,uint256))",
      [ethereum.Value.fromString(name)]
    );

    return changetype<Contract__checkWallPaperResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_checkWallPaper(
    name: string
  ): ethereum.CallResult<Contract__checkWallPaperResultValue0Struct> {
    let result = super.tryCall(
      "checkWallPaper",
      "checkWallPaper(string):((address,uint256))",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contract__checkWallPaperResultValue0Struct>(value[0].toTuple())
    );
  }

  depositInfo(
    param0: string,
    param1: Address,
    param2: BigInt
  ): Contract__depositInfoResult {
    let result = super.call(
      "depositInfo",
      "depositInfo(string,address,uint256):(address,uint256,uint256,uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return new Contract__depositInfoResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_depositInfo(
    param0: string,
    param1: Address,
    param2: BigInt
  ): ethereum.CallResult<Contract__depositInfoResult> {
    let result = super.tryCall(
      "depositInfo",
      "depositInfo(string,address,uint256):(address,uint256,uint256,uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__depositInfoResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMapLocked(): boolean {
    let result = super.call("isMapLocked", "isMapLocked():(bool)", []);

    return result[0].toBoolean();
  }

  try_isMapLocked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isMapLocked", "isMapLocked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mapSettings(): Contract__mapSettingsResult {
    let result = super.call(
      "mapSettings",
      "mapSettings():(uint8,uint8,uint8,uint8)",
      []
    );

    return new Contract__mapSettingsResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toI32()
    );
  }

  try_mapSettings(): ethereum.CallResult<Contract__mapSettingsResult> {
    let result = super.tryCall(
      "mapSettings",
      "mapSettings():(uint8,uint8,uint8,uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__mapSettingsResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toI32()
      )
    );
  }

  numberOfLand(): BigInt {
    let result = super.call("numberOfLand", "numberOfLand():(uint256)", []);

    return result[0].toBigInt();
  }

  try_numberOfLand(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numberOfLand", "numberOfLand():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  onERC1155BatchReceived(
    operator: Address,
    from: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    data: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    operator: Address,
    from: Address,
    ids: Array<BigInt>,
    values: Array<BigInt>,
    data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigIntArray(ids),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    operator: Address,
    from: Address,
    id: BigInt,
    value: BigInt,
    data: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(data)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    operator: Address,
    from: Address,
    id: BigInt,
    value: BigInt,
    data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(operator),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(id),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromBytes(data)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ownerLists(param0: string): Address {
    let result = super.call("ownerLists", "ownerLists(string):(address)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toAddress();
  }

  try_ownerLists(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerLists", "ownerLists(string):(address)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOfPhiland(name: string): Address {
    let result = super.call(
      "ownerOfPhiland",
      "ownerOfPhiland(string):(address)",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toAddress();
  }

  try_ownerOfPhiland(name: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ownerOfPhiland",
      "ownerOfPhiland(string):(address)",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  userObject(param0: string, param1: BigInt): Contract__userObjectResult {
    let result = super.call(
      "userObject",
      "userObject(string,uint256):(address,uint256,uint8,uint8,uint8,uint8,(string,string,uint256))",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Contract__userObjectResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toI32(),
      changetype<Contract__userObjectResultLinkStruct>(result[6].toTuple())
    );
  }

  try_userObject(
    param0: string,
    param1: BigInt
  ): ethereum.CallResult<Contract__userObjectResult> {
    let result = super.tryCall(
      "userObject",
      "userObject(string,uint256):(address,uint256,uint8,uint8,uint8,uint8,(string,string,uint256))",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__userObjectResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toI32(),
        changetype<Contract__userObjectResultLinkStruct>(value[6].toTuple())
      )
    );
  }

  userObjectDeposit(
    param0: string,
    param1: BigInt
  ): Contract__userObjectDepositResult {
    let result = super.call(
      "userObjectDeposit",
      "userObjectDeposit(string,uint256):(address,uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Contract__userObjectDepositResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_userObjectDeposit(
    param0: string,
    param1: BigInt
  ): ethereum.CallResult<Contract__userObjectDepositResult> {
    let result = super.tryCall(
      "userObjectDeposit",
      "userObjectDeposit(string,uint256):(address,uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__userObjectDepositResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  viewLinks(name: string): Array<Contract__viewLinksResultValue0Struct> {
    let result = super.call(
      "viewLinks",
      "viewLinks(string):((string,string,uint256)[])",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toTupleArray<Contract__viewLinksResultValue0Struct>();
  }

  try_viewLinks(
    name: string
  ): ethereum.CallResult<Array<Contract__viewLinksResultValue0Struct>> {
    let result = super.tryCall(
      "viewLinks",
      "viewLinks(string):((string,string,uint256)[])",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__viewLinksResultValue0Struct>()
    );
  }

  viewObjectLink(
    name: string,
    objectIndex: BigInt
  ): Contract__viewObjectLinkResultValue0Struct {
    let result = super.call(
      "viewObjectLink",
      "viewObjectLink(string,uint256):((string,string,uint256))",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromUnsignedBigInt(objectIndex)
      ]
    );

    return changetype<Contract__viewObjectLinkResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_viewObjectLink(
    name: string,
    objectIndex: BigInt
  ): ethereum.CallResult<Contract__viewObjectLinkResultValue0Struct> {
    let result = super.tryCall(
      "viewObjectLink",
      "viewObjectLink(string,uint256):((string,string,uint256))",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromUnsignedBigInt(objectIndex)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contract__viewObjectLinkResultValue0Struct>(value[0].toTuple())
    );
  }

  viewPhiland(name: string): Array<Contract__viewPhilandResultValue0Struct> {
    let result = super.call(
      "viewPhiland",
      "viewPhiland(string):((address,uint256,uint8,uint8,uint8,uint8,(string,string,uint256))[])",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toTupleArray<Contract__viewPhilandResultValue0Struct>();
  }

  try_viewPhiland(
    name: string
  ): ethereum.CallResult<Array<Contract__viewPhilandResultValue0Struct>> {
    let result = super.tryCall(
      "viewPhiland",
      "viewPhiland(string):((address,uint256,uint8,uint8,uint8,uint8,(string,string,uint256))[])",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__viewPhilandResultValue0Struct>()
    );
  }

  viewPhilandArray(name: string): Array<BigInt> {
    let result = super.call(
      "viewPhilandArray",
      "viewPhilandArray(string):(uint256[])",
      [ethereum.Value.fromString(name)]
    );

    return result[0].toBigIntArray();
  }

  try_viewPhilandArray(name: string): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "viewPhilandArray",
      "viewPhilandArray(string):(uint256[])",
      [ethereum.Value.fromString(name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  wallPaper(param0: string): Contract__wallPaperResult {
    let result = super.call(
      "wallPaper",
      "wallPaper(string):(address,uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return new Contract__wallPaperResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_wallPaper(
    param0: string
  ): ethereum.CallResult<Contract__wallPaperResult> {
    let result = super.tryCall(
      "wallPaper",
      "wallPaper(string):(address,uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__wallPaperResult(value[0].toAddress(), value[1].toBigInt())
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BatchDepositObjectCall extends ethereum.Call {
  get inputs(): BatchDepositObjectCall__Inputs {
    return new BatchDepositObjectCall__Inputs(this);
  }

  get outputs(): BatchDepositObjectCall__Outputs {
    return new BatchDepositObjectCall__Outputs(this);
  }
}

export class BatchDepositObjectCall__Inputs {
  _call: BatchDepositObjectCall;

  constructor(call: BatchDepositObjectCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get contractAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class BatchDepositObjectCall__Outputs {
  _call: BatchDepositObjectCall;

  constructor(call: BatchDepositObjectCall) {
    this._call = call;
  }
}

export class BatchDepositObjectFromShopCall extends ethereum.Call {
  get inputs(): BatchDepositObjectFromShopCall__Inputs {
    return new BatchDepositObjectFromShopCall__Inputs(this);
  }

  get outputs(): BatchDepositObjectFromShopCall__Outputs {
    return new BatchDepositObjectFromShopCall__Outputs(this);
  }
}

export class BatchDepositObjectFromShopCall__Inputs {
  _call: BatchDepositObjectFromShopCall;

  constructor(call: BatchDepositObjectFromShopCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get msgSender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get contractAddresses(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class BatchDepositObjectFromShopCall__Outputs {
  _call: BatchDepositObjectFromShopCall;

  constructor(call: BatchDepositObjectFromShopCall) {
    this._call = call;
  }
}

export class BatchWithdrawObjectCall extends ethereum.Call {
  get inputs(): BatchWithdrawObjectCall__Inputs {
    return new BatchWithdrawObjectCall__Inputs(this);
  }

  get outputs(): BatchWithdrawObjectCall__Outputs {
    return new BatchWithdrawObjectCall__Outputs(this);
  }
}

export class BatchWithdrawObjectCall__Inputs {
  _call: BatchWithdrawObjectCall;

  constructor(call: BatchWithdrawObjectCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get contractAddresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class BatchWithdrawObjectCall__Outputs {
  _call: BatchWithdrawObjectCall;

  constructor(call: BatchWithdrawObjectCall) {
    this._call = call;
  }
}

export class ChangePhilandOwnerCall extends ethereum.Call {
  get inputs(): ChangePhilandOwnerCall__Inputs {
    return new ChangePhilandOwnerCall__Inputs(this);
  }

  get outputs(): ChangePhilandOwnerCall__Outputs {
    return new ChangePhilandOwnerCall__Outputs(this);
  }
}

export class ChangePhilandOwnerCall__Inputs {
  _call: ChangePhilandOwnerCall;

  constructor(call: ChangePhilandOwnerCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get caller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangePhilandOwnerCall__Outputs {
  _call: ChangePhilandOwnerCall;

  constructor(call: ChangePhilandOwnerCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get caller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }
}

export class FlipLockMapCall extends ethereum.Call {
  get inputs(): FlipLockMapCall__Inputs {
    return new FlipLockMapCall__Inputs(this);
  }

  get outputs(): FlipLockMapCall__Outputs {
    return new FlipLockMapCall__Outputs(this);
  }
}

export class FlipLockMapCall__Inputs {
  _call: FlipLockMapCall;

  constructor(call: FlipLockMapCall) {
    this._call = call;
  }
}

export class FlipLockMapCall__Outputs {
  _call: FlipLockMapCall;

  constructor(call: FlipLockMapCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MapInitializationCall extends ethereum.Call {
  get inputs(): MapInitializationCall__Inputs {
    return new MapInitializationCall__Inputs(this);
  }

  get outputs(): MapInitializationCall__Outputs {
    return new MapInitializationCall__Outputs(this);
  }
}

export class MapInitializationCall__Inputs {
  _call: MapInitializationCall;

  constructor(call: MapInitializationCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class MapInitializationCall__Outputs {
  _call: MapInitializationCall;

  constructor(call: MapInitializationCall) {
    this._call = call;
  }
}

export class RemovehitelistObjectCall extends ethereum.Call {
  get inputs(): RemovehitelistObjectCall__Inputs {
    return new RemovehitelistObjectCall__Inputs(this);
  }

  get outputs(): RemovehitelistObjectCall__Outputs {
    return new RemovehitelistObjectCall__Outputs(this);
  }
}

export class RemovehitelistObjectCall__Inputs {
  _call: RemovehitelistObjectCall;

  constructor(call: RemovehitelistObjectCall) {
    this._call = call;
  }

  get oldObject(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemovehitelistObjectCall__Outputs {
  _call: RemovehitelistObjectCall;

  constructor(call: RemovehitelistObjectCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SaveCall extends ethereum.Call {
  get inputs(): SaveCall__Inputs {
    return new SaveCall__Inputs(this);
  }

  get outputs(): SaveCall__Outputs {
    return new SaveCall__Outputs(this);
  }
}

export class SaveCall__Inputs {
  _call: SaveCall;

  constructor(call: SaveCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get removeIndexArray(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get objectDatas(): Array<SaveCallObjectDatasStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      SaveCallObjectDatasStruct
    >();
  }

  get links(): Array<SaveCallLinksStruct> {
    return this._call.inputValues[3].value.toTupleArray<SaveCallLinksStruct>();
  }

  get wcontractAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get wtokenId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get bcontractAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get btokenId(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class SaveCall__Outputs {
  _call: SaveCall;

  constructor(call: SaveCall) {
    this._call = call;
  }
}

export class SaveCallObjectDatasStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get xStart(): i32 {
    return this[2].toI32();
  }

  get yStart(): i32 {
    return this[3].toI32();
  }
}

export class SaveCallLinksStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }

  get data(): BigInt {
    return this[2].toBigInt();
  }
}

export class SetWhitelistObjectCall extends ethereum.Call {
  get inputs(): SetWhitelistObjectCall__Inputs {
    return new SetWhitelistObjectCall__Inputs(this);
  }

  get outputs(): SetWhitelistObjectCall__Outputs {
    return new SetWhitelistObjectCall__Outputs(this);
  }
}

export class SetWhitelistObjectCall__Inputs {
  _call: SetWhitelistObjectCall;

  constructor(call: SetWhitelistObjectCall) {
    this._call = call;
  }

  get newObject(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWhitelistObjectCall__Outputs {
  _call: SetWhitelistObjectCall;

  constructor(call: SetWhitelistObjectCall) {
    this._call = call;
  }
}

export class WriteObjectToLandCall extends ethereum.Call {
  get inputs(): WriteObjectToLandCall__Inputs {
    return new WriteObjectToLandCall__Inputs(this);
  }

  get outputs(): WriteObjectToLandCall__Outputs {
    return new WriteObjectToLandCall__Outputs(this);
  }
}

export class WriteObjectToLandCall__Inputs {
  _call: WriteObjectToLandCall;

  constructor(call: WriteObjectToLandCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get objectData(): WriteObjectToLandCallObjectDataStruct {
    return changetype<WriteObjectToLandCallObjectDataStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get link(): WriteObjectToLandCallLinkStruct {
    return changetype<WriteObjectToLandCallLinkStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class WriteObjectToLandCall__Outputs {
  _call: WriteObjectToLandCall;

  constructor(call: WriteObjectToLandCall) {
    this._call = call;
  }
}

export class WriteObjectToLandCallObjectDataStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get xStart(): i32 {
    return this[2].toI32();
  }

  get yStart(): i32 {
    return this[3].toI32();
  }
}

export class WriteObjectToLandCallLinkStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }

  get data(): BigInt {
    return this[2].toBigInt();
  }
}
